# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsTeam(;
        archived=nothing,
        avatar_base_url=nothing,
        created=nothing,
        date_create=nothing,
        deleted=nothing,
        discoverable=nothing,
        domain=nothing,
        email_domain=nothing,
        enterprise_id=nothing,
        enterprise_name=nothing,
        external_org_migrations=nothing,
        has_compliance_export=nothing,
        icon=nothing,
        id=nothing,
        is_assigned=nothing,
        is_enterprise=nothing,
        is_over_storage_limit=nothing,
        limit_ts=nothing,
        locale=nothing,
        messages_count=nothing,
        msg_edit_window_mins=nothing,
        name=nothing,
        over_integrations_limit=nothing,
        over_storage_limit=nothing,
        pay_prod_cur=nothing,
        plan=nothing,
        primary_owner=nothing,
        sso_provider=nothing,
    )

    - archived::Bool
    - avatar_base_url::String
    - created::Int32
    - date_create::Int32
    - deleted::Bool
    - discoverable::Any
    - domain::String
    - email_domain::String
    - enterprise_id::DefsEnterpriseId
    - enterprise_name::DefsEnterpriseName
    - external_org_migrations::ObjsExternalOrgMigrations
    - has_compliance_export::Bool
    - icon::ObjsIcon
    - id::DefsWorkspaceId
    - is_assigned::Bool
    - is_enterprise::Int32
    - is_over_storage_limit::Bool
    - limit_ts::Int32
    - locale::String
    - messages_count::Int32
    - msg_edit_window_mins::Int32
    - name::String
    - over_integrations_limit::Bool
    - over_storage_limit::Bool
    - pay_prod_cur::String
    - plan::String
    - primary_owner::ObjsPrimaryOwner
    - sso_provider::ObjsTeamSsoProvider
"""
mutable struct ObjsTeam <: SwaggerModel
    archived::Any # spec type: Union{ Nothing, Bool } # spec name: archived
    avatar_base_url::Any # spec type: Union{ Nothing, String } # spec name: avatar_base_url
    created::Any # spec type: Union{ Nothing, Int32 } # spec name: created
    date_create::Any # spec type: Union{ Nothing, Int32 } # spec name: date_create
    deleted::Any # spec type: Union{ Nothing, Bool } # spec name: deleted
    discoverable::Any # spec type: Union{ Nothing, Any } # spec name: discoverable
    domain::Any # spec type: Union{ Nothing, String } # spec name: domain
    email_domain::Any # spec type: Union{ Nothing, String } # spec name: email_domain
    enterprise_id::Any # spec type: Union{ Nothing, DefsEnterpriseId } # spec name: enterprise_id
    enterprise_name::Any # spec type: Union{ Nothing, DefsEnterpriseName } # spec name: enterprise_name
    external_org_migrations::Any # spec type: Union{ Nothing, ObjsExternalOrgMigrations } # spec name: external_org_migrations
    has_compliance_export::Any # spec type: Union{ Nothing, Bool } # spec name: has_compliance_export
    icon::Any # spec type: Union{ Nothing, ObjsIcon } # spec name: icon
    id::Any # spec type: Union{ Nothing, DefsWorkspaceId } # spec name: id
    is_assigned::Any # spec type: Union{ Nothing, Bool } # spec name: is_assigned
    is_enterprise::Any # spec type: Union{ Nothing, Int32 } # spec name: is_enterprise
    is_over_storage_limit::Any # spec type: Union{ Nothing, Bool } # spec name: is_over_storage_limit
    limit_ts::Any # spec type: Union{ Nothing, Int32 } # spec name: limit_ts
    locale::Any # spec type: Union{ Nothing, String } # spec name: locale
    messages_count::Any # spec type: Union{ Nothing, Int32 } # spec name: messages_count
    msg_edit_window_mins::Any # spec type: Union{ Nothing, Int32 } # spec name: msg_edit_window_mins
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    over_integrations_limit::Any # spec type: Union{ Nothing, Bool } # spec name: over_integrations_limit
    over_storage_limit::Any # spec type: Union{ Nothing, Bool } # spec name: over_storage_limit
    pay_prod_cur::Any # spec type: Union{ Nothing, String } # spec name: pay_prod_cur
    plan::Any # spec type: Union{ Nothing, String } # spec name: plan
    primary_owner::Any # spec type: Union{ Nothing, ObjsPrimaryOwner } # spec name: primary_owner
    sso_provider::Any # spec type: Union{ Nothing, ObjsTeamSsoProvider } # spec name: sso_provider

    function ObjsTeam(;archived=nothing, avatar_base_url=nothing, created=nothing, date_create=nothing, deleted=nothing, discoverable=nothing, domain=nothing, email_domain=nothing, enterprise_id=nothing, enterprise_name=nothing, external_org_migrations=nothing, has_compliance_export=nothing, icon=nothing, id=nothing, is_assigned=nothing, is_enterprise=nothing, is_over_storage_limit=nothing, limit_ts=nothing, locale=nothing, messages_count=nothing, msg_edit_window_mins=nothing, name=nothing, over_integrations_limit=nothing, over_storage_limit=nothing, pay_prod_cur=nothing, plan=nothing, primary_owner=nothing, sso_provider=nothing)
        o = new()
        validate_property(ObjsTeam, Symbol("archived"), archived)
        setfield!(o, Symbol("archived"), archived)
        validate_property(ObjsTeam, Symbol("avatar_base_url"), avatar_base_url)
        setfield!(o, Symbol("avatar_base_url"), avatar_base_url)
        validate_property(ObjsTeam, Symbol("created"), created)
        setfield!(o, Symbol("created"), created)
        validate_property(ObjsTeam, Symbol("date_create"), date_create)
        setfield!(o, Symbol("date_create"), date_create)
        validate_property(ObjsTeam, Symbol("deleted"), deleted)
        setfield!(o, Symbol("deleted"), deleted)
        validate_property(ObjsTeam, Symbol("discoverable"), discoverable)
        setfield!(o, Symbol("discoverable"), discoverable)
        validate_property(ObjsTeam, Symbol("domain"), domain)
        setfield!(o, Symbol("domain"), domain)
        validate_property(ObjsTeam, Symbol("email_domain"), email_domain)
        setfield!(o, Symbol("email_domain"), email_domain)
        validate_property(ObjsTeam, Symbol("enterprise_id"), enterprise_id)
        setfield!(o, Symbol("enterprise_id"), enterprise_id)
        validate_property(ObjsTeam, Symbol("enterprise_name"), enterprise_name)
        setfield!(o, Symbol("enterprise_name"), enterprise_name)
        validate_property(ObjsTeam, Symbol("external_org_migrations"), external_org_migrations)
        setfield!(o, Symbol("external_org_migrations"), external_org_migrations)
        validate_property(ObjsTeam, Symbol("has_compliance_export"), has_compliance_export)
        setfield!(o, Symbol("has_compliance_export"), has_compliance_export)
        validate_property(ObjsTeam, Symbol("icon"), icon)
        setfield!(o, Symbol("icon"), icon)
        validate_property(ObjsTeam, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(ObjsTeam, Symbol("is_assigned"), is_assigned)
        setfield!(o, Symbol("is_assigned"), is_assigned)
        validate_property(ObjsTeam, Symbol("is_enterprise"), is_enterprise)
        setfield!(o, Symbol("is_enterprise"), is_enterprise)
        validate_property(ObjsTeam, Symbol("is_over_storage_limit"), is_over_storage_limit)
        setfield!(o, Symbol("is_over_storage_limit"), is_over_storage_limit)
        validate_property(ObjsTeam, Symbol("limit_ts"), limit_ts)
        setfield!(o, Symbol("limit_ts"), limit_ts)
        validate_property(ObjsTeam, Symbol("locale"), locale)
        setfield!(o, Symbol("locale"), locale)
        validate_property(ObjsTeam, Symbol("messages_count"), messages_count)
        setfield!(o, Symbol("messages_count"), messages_count)
        validate_property(ObjsTeam, Symbol("msg_edit_window_mins"), msg_edit_window_mins)
        setfield!(o, Symbol("msg_edit_window_mins"), msg_edit_window_mins)
        validate_property(ObjsTeam, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(ObjsTeam, Symbol("over_integrations_limit"), over_integrations_limit)
        setfield!(o, Symbol("over_integrations_limit"), over_integrations_limit)
        validate_property(ObjsTeam, Symbol("over_storage_limit"), over_storage_limit)
        setfield!(o, Symbol("over_storage_limit"), over_storage_limit)
        validate_property(ObjsTeam, Symbol("pay_prod_cur"), pay_prod_cur)
        setfield!(o, Symbol("pay_prod_cur"), pay_prod_cur)
        validate_property(ObjsTeam, Symbol("plan"), plan)
        setfield!(o, Symbol("plan"), plan)
        validate_property(ObjsTeam, Symbol("primary_owner"), primary_owner)
        setfield!(o, Symbol("primary_owner"), primary_owner)
        validate_property(ObjsTeam, Symbol("sso_provider"), sso_provider)
        setfield!(o, Symbol("sso_provider"), sso_provider)
        o
    end
end # type ObjsTeam

const _property_map_ObjsTeam = Dict{Symbol,Symbol}(Symbol("archived")=>Symbol("archived"), Symbol("avatar_base_url")=>Symbol("avatar_base_url"), Symbol("created")=>Symbol("created"), Symbol("date_create")=>Symbol("date_create"), Symbol("deleted")=>Symbol("deleted"), Symbol("discoverable")=>Symbol("discoverable"), Symbol("domain")=>Symbol("domain"), Symbol("email_domain")=>Symbol("email_domain"), Symbol("enterprise_id")=>Symbol("enterprise_id"), Symbol("enterprise_name")=>Symbol("enterprise_name"), Symbol("external_org_migrations")=>Symbol("external_org_migrations"), Symbol("has_compliance_export")=>Symbol("has_compliance_export"), Symbol("icon")=>Symbol("icon"), Symbol("id")=>Symbol("id"), Symbol("is_assigned")=>Symbol("is_assigned"), Symbol("is_enterprise")=>Symbol("is_enterprise"), Symbol("is_over_storage_limit")=>Symbol("is_over_storage_limit"), Symbol("limit_ts")=>Symbol("limit_ts"), Symbol("locale")=>Symbol("locale"), Symbol("messages_count")=>Symbol("messages_count"), Symbol("msg_edit_window_mins")=>Symbol("msg_edit_window_mins"), Symbol("name")=>Symbol("name"), Symbol("over_integrations_limit")=>Symbol("over_integrations_limit"), Symbol("over_storage_limit")=>Symbol("over_storage_limit"), Symbol("pay_prod_cur")=>Symbol("pay_prod_cur"), Symbol("plan")=>Symbol("plan"), Symbol("primary_owner")=>Symbol("primary_owner"), Symbol("sso_provider")=>Symbol("sso_provider"))
const _property_types_ObjsTeam = Dict{Symbol,String}(Symbol("archived")=>"Bool", Symbol("avatar_base_url")=>"String", Symbol("created")=>"Int32", Symbol("date_create")=>"Int32", Symbol("deleted")=>"Bool", Symbol("discoverable")=>"Any", Symbol("domain")=>"String", Symbol("email_domain")=>"String", Symbol("enterprise_id")=>"DefsEnterpriseId", Symbol("enterprise_name")=>"DefsEnterpriseName", Symbol("external_org_migrations")=>"ObjsExternalOrgMigrations", Symbol("has_compliance_export")=>"Bool", Symbol("icon")=>"ObjsIcon", Symbol("id")=>"DefsWorkspaceId", Symbol("is_assigned")=>"Bool", Symbol("is_enterprise")=>"Int32", Symbol("is_over_storage_limit")=>"Bool", Symbol("limit_ts")=>"Int32", Symbol("locale")=>"String", Symbol("messages_count")=>"Int32", Symbol("msg_edit_window_mins")=>"Int32", Symbol("name")=>"String", Symbol("over_integrations_limit")=>"Bool", Symbol("over_storage_limit")=>"Bool", Symbol("pay_prod_cur")=>"String", Symbol("plan")=>"String", Symbol("primary_owner")=>"ObjsPrimaryOwner", Symbol("sso_provider")=>"ObjsTeamSsoProvider")
Base.propertynames(::Type{ ObjsTeam }) = collect(keys(_property_map_ObjsTeam))
Swagger.property_type(::Type{ ObjsTeam }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsTeam[name]))}
Swagger.field_name(::Type{ ObjsTeam }, property_name::Symbol) =  _property_map_ObjsTeam[property_name]

const _allowed_ObjsTeam_plan = ["", "std", "plus", "compliance", "enterprise"]

function check_required(o::ObjsTeam)
    (getproperty(o, Symbol("domain")) === nothing) && (return false)
    (getproperty(o, Symbol("email_domain")) === nothing) && (return false)
    (getproperty(o, Symbol("icon")) === nothing) && (return false)
    (getproperty(o, Symbol("id")) === nothing) && (return false)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsTeam }, name::Symbol, val)
    if name === Symbol("plan")
        Swagger.validate_param(name, "ObjsTeam", :enum, val, _allowed_ObjsTeam_plan)
    end
end
