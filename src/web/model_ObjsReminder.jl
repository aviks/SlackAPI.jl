# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsReminder(;
        complete_ts=nothing,
        creator=nothing,
        id=nothing,
        recurring=nothing,
        text=nothing,
        time=nothing,
        user=nothing,
    )

    - complete_ts::Int32
    - creator::DefsUserId
    - id::DefsReminderId
    - recurring::Bool
    - text::String
    - time::Int32
    - user::DefsUserId
"""
mutable struct ObjsReminder <: SwaggerModel
    complete_ts::Any # spec type: Union{ Nothing, Int32 } # spec name: complete_ts
    creator::Any # spec type: Union{ Nothing, DefsUserId } # spec name: creator
    id::Any # spec type: Union{ Nothing, DefsReminderId } # spec name: id
    recurring::Any # spec type: Union{ Nothing, Bool } # spec name: recurring
    text::Any # spec type: Union{ Nothing, String } # spec name: text
    time::Any # spec type: Union{ Nothing, Int32 } # spec name: time
    user::Any # spec type: Union{ Nothing, DefsUserId } # spec name: user

    function ObjsReminder(;complete_ts=nothing, creator=nothing, id=nothing, recurring=nothing, text=nothing, time=nothing, user=nothing)
        o = new()
        validate_property(ObjsReminder, Symbol("complete_ts"), complete_ts)
        setfield!(o, Symbol("complete_ts"), complete_ts)
        validate_property(ObjsReminder, Symbol("creator"), creator)
        setfield!(o, Symbol("creator"), creator)
        validate_property(ObjsReminder, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(ObjsReminder, Symbol("recurring"), recurring)
        setfield!(o, Symbol("recurring"), recurring)
        validate_property(ObjsReminder, Symbol("text"), text)
        setfield!(o, Symbol("text"), text)
        validate_property(ObjsReminder, Symbol("time"), time)
        setfield!(o, Symbol("time"), time)
        validate_property(ObjsReminder, Symbol("user"), user)
        setfield!(o, Symbol("user"), user)
        o
    end
end # type ObjsReminder

const _property_map_ObjsReminder = Dict{Symbol,Symbol}(Symbol("complete_ts")=>Symbol("complete_ts"), Symbol("creator")=>Symbol("creator"), Symbol("id")=>Symbol("id"), Symbol("recurring")=>Symbol("recurring"), Symbol("text")=>Symbol("text"), Symbol("time")=>Symbol("time"), Symbol("user")=>Symbol("user"))
const _property_types_ObjsReminder = Dict{Symbol,String}(Symbol("complete_ts")=>"Int32", Symbol("creator")=>"DefsUserId", Symbol("id")=>"DefsReminderId", Symbol("recurring")=>"Bool", Symbol("text")=>"String", Symbol("time")=>"Int32", Symbol("user")=>"DefsUserId")
Base.propertynames(::Type{ ObjsReminder }) = collect(keys(_property_map_ObjsReminder))
Swagger.property_type(::Type{ ObjsReminder }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsReminder[name]))}
Swagger.field_name(::Type{ ObjsReminder }, property_name::Symbol) =  _property_map_ObjsReminder[property_name]

function check_required(o::ObjsReminder)
    (getproperty(o, Symbol("creator")) === nothing) && (return false)
    (getproperty(o, Symbol("id")) === nothing) && (return false)
    (getproperty(o, Symbol("recurring")) === nothing) && (return false)
    (getproperty(o, Symbol("text")) === nothing) && (return false)
    (getproperty(o, Symbol("user")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsReminder }, name::Symbol, val)
end
