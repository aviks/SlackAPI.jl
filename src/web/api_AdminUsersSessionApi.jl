# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct AdminUsersSessionApi <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_adminUsersSessionInvalidate(_api::AdminUsersSessionApi, team_id::String, session_id::Int32; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.users.session.invalidate", ["slackAuth"])
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "session_id", session_id)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Invalidate a single session for a user by session_id
Param: team_id::String (required)
Param: session_id::Int32 (required)
Return: Dict{String, Any}
"""
function adminUsersSessionInvalidate(_api::AdminUsersSessionApi, team_id::String, session_id::Int32; _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsersSessionInvalidate(_api, team_id, session_id; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsersSessionInvalidate(_api::AdminUsersSessionApi, response_stream::Channel, team_id::String, session_id::Int32; _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsersSessionInvalidate(_api, team_id, session_id; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminUsersSessionReset(_api::AdminUsersSessionApi, user_id::String; mobile_only=nothing, web_only=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.users.session.reset", ["slackAuth"])
    Swagger.set_param(_ctx.form, "user_id", user_id)  # type String
    Swagger.set_param(_ctx.form, "mobile_only", mobile_only)  # type Bool
    Swagger.set_param(_ctx.form, "web_only", web_only)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Wipes all valid sessions on all devices for a given user
Param: user_id::String (required)
Param: mobile_only::Bool
Param: web_only::Bool
Return: Dict{String, Any}
"""
function adminUsersSessionReset(_api::AdminUsersSessionApi, user_id::String; mobile_only=nothing, web_only=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsersSessionReset(_api, user_id; mobile_only=mobile_only, web_only=web_only, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsersSessionReset(_api::AdminUsersSessionApi, response_stream::Channel, user_id::String; mobile_only=nothing, web_only=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsersSessionReset(_api, user_id; mobile_only=mobile_only, web_only=web_only, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export adminUsersSessionInvalidate, adminUsersSessionReset
