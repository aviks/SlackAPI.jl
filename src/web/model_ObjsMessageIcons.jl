# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsMessageIcons(;
        emoji=nothing,
        image_64=nothing,
    )

    - emoji::String
    - image_64::String
"""
mutable struct ObjsMessageIcons <: SwaggerModel
    emoji::Any # spec type: Union{ Nothing, String } # spec name: emoji
    image_64::Any # spec type: Union{ Nothing, String } # spec name: image_64

    function ObjsMessageIcons(;emoji=nothing, image_64=nothing)
        o = new()
        validate_property(ObjsMessageIcons, Symbol("emoji"), emoji)
        setfield!(o, Symbol("emoji"), emoji)
        validate_property(ObjsMessageIcons, Symbol("image_64"), image_64)
        setfield!(o, Symbol("image_64"), image_64)
        o
    end
end # type ObjsMessageIcons

const _property_map_ObjsMessageIcons = Dict{Symbol,Symbol}(Symbol("emoji")=>Symbol("emoji"), Symbol("image_64")=>Symbol("image_64"))
const _property_types_ObjsMessageIcons = Dict{Symbol,String}(Symbol("emoji")=>"String", Symbol("image_64")=>"String")
Base.propertynames(::Type{ ObjsMessageIcons }) = collect(keys(_property_map_ObjsMessageIcons))
Swagger.property_type(::Type{ ObjsMessageIcons }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsMessageIcons[name]))}
Swagger.field_name(::Type{ ObjsMessageIcons }, property_name::Symbol) =  _property_map_ObjsMessageIcons[property_name]

function check_required(o::ObjsMessageIcons)
    true
end

function validate_property(::Type{ ObjsMessageIcons }, name::Symbol, val)
end
