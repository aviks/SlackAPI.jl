# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsSubteamPrefs(;
        channels=nothing,
        groups=nothing,
    )

    - channels::Vector{DefsChannelId}
    - groups::Vector{DefsGroupId}
"""
mutable struct ObjsSubteamPrefs <: SwaggerModel
    channels::Any # spec type: Union{ Nothing, Vector{DefsChannelId} } # spec name: channels
    groups::Any # spec type: Union{ Nothing, Vector{DefsGroupId} } # spec name: groups

    function ObjsSubteamPrefs(;channels=nothing, groups=nothing)
        o = new()
        validate_property(ObjsSubteamPrefs, Symbol("channels"), channels)
        setfield!(o, Symbol("channels"), channels)
        validate_property(ObjsSubteamPrefs, Symbol("groups"), groups)
        setfield!(o, Symbol("groups"), groups)
        o
    end
end # type ObjsSubteamPrefs

const _property_map_ObjsSubteamPrefs = Dict{Symbol,Symbol}(Symbol("channels")=>Symbol("channels"), Symbol("groups")=>Symbol("groups"))
const _property_types_ObjsSubteamPrefs = Dict{Symbol,String}(Symbol("channels")=>"Vector{DefsChannelId}", Symbol("groups")=>"Vector{DefsGroupId}")
Base.propertynames(::Type{ ObjsSubteamPrefs }) = collect(keys(_property_map_ObjsSubteamPrefs))
Swagger.property_type(::Type{ ObjsSubteamPrefs }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsSubteamPrefs[name]))}
Swagger.field_name(::Type{ ObjsSubteamPrefs }, property_name::Symbol) =  _property_map_ObjsSubteamPrefs[property_name]

function check_required(o::ObjsSubteamPrefs)
    (getproperty(o, Symbol("channels")) === nothing) && (return false)
    (getproperty(o, Symbol("groups")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsSubteamPrefs }, name::Symbol, val)
end
