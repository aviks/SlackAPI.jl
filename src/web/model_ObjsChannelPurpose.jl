# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsChannelPurpose(;
        creator=nothing,
        last_set=nothing,
        value=nothing,
    )

    - creator::DefsTopicPurposeCreator
    - last_set::Int32
    - value::String
"""
mutable struct ObjsChannelPurpose <: SwaggerModel
    creator::Any # spec type: Union{ Nothing, DefsTopicPurposeCreator } # spec name: creator
    last_set::Any # spec type: Union{ Nothing, Int32 } # spec name: last_set
    value::Any # spec type: Union{ Nothing, String } # spec name: value

    function ObjsChannelPurpose(;creator=nothing, last_set=nothing, value=nothing)
        o = new()
        validate_property(ObjsChannelPurpose, Symbol("creator"), creator)
        setfield!(o, Symbol("creator"), creator)
        validate_property(ObjsChannelPurpose, Symbol("last_set"), last_set)
        setfield!(o, Symbol("last_set"), last_set)
        validate_property(ObjsChannelPurpose, Symbol("value"), value)
        setfield!(o, Symbol("value"), value)
        o
    end
end # type ObjsChannelPurpose

const _property_map_ObjsChannelPurpose = Dict{Symbol,Symbol}(Symbol("creator")=>Symbol("creator"), Symbol("last_set")=>Symbol("last_set"), Symbol("value")=>Symbol("value"))
const _property_types_ObjsChannelPurpose = Dict{Symbol,String}(Symbol("creator")=>"DefsTopicPurposeCreator", Symbol("last_set")=>"Int32", Symbol("value")=>"String")
Base.propertynames(::Type{ ObjsChannelPurpose }) = collect(keys(_property_map_ObjsChannelPurpose))
Swagger.property_type(::Type{ ObjsChannelPurpose }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsChannelPurpose[name]))}
Swagger.field_name(::Type{ ObjsChannelPurpose }, property_name::Symbol) =  _property_map_ObjsChannelPurpose[property_name]

function check_required(o::ObjsChannelPurpose)
    (getproperty(o, Symbol("creator")) === nothing) && (return false)
    (getproperty(o, Symbol("last_set")) === nothing) && (return false)
    (getproperty(o, Symbol("value")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsChannelPurpose }, name::Symbol, val)
end
