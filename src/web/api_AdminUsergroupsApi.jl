# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct AdminUsergroupsApi <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_adminUsergroupsAddChannels(_api::AdminUsergroupsApi, usergroup_id::String, channel_ids::String; team_id=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.usergroups.addChannels", ["slackAuth"])
    Swagger.set_param(_ctx.form, "usergroup_id", usergroup_id)  # type String
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "channel_ids", channel_ids)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Add one or more default channels to an IDP group.
Param: usergroup_id::String (required)
Param: channel_ids::String (required)
Param: team_id::String
Return: Dict{String, Any}
"""
function adminUsergroupsAddChannels(_api::AdminUsergroupsApi, usergroup_id::String, channel_ids::String; team_id=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsAddChannels(_api, usergroup_id, channel_ids; team_id=team_id, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsergroupsAddChannels(_api::AdminUsergroupsApi, response_stream::Channel, usergroup_id::String, channel_ids::String; team_id=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsAddChannels(_api, usergroup_id, channel_ids; team_id=team_id, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminUsergroupsAddTeams(_api::AdminUsergroupsApi, usergroup_id::String, team_ids::String; auto_provision=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.usergroups.addTeams", ["slackAuth"])
    Swagger.set_param(_ctx.form, "usergroup_id", usergroup_id)  # type String
    Swagger.set_param(_ctx.form, "team_ids", team_ids)  # type String
    Swagger.set_param(_ctx.form, "auto_provision", auto_provision)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Associate one or more default workspaces with an organization-wide IDP group.
Param: usergroup_id::String (required)
Param: team_ids::String (required)
Param: auto_provision::Bool
Return: Dict{String, Any}
"""
function adminUsergroupsAddTeams(_api::AdminUsergroupsApi, usergroup_id::String, team_ids::String; auto_provision=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsAddTeams(_api, usergroup_id, team_ids; auto_provision=auto_provision, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsergroupsAddTeams(_api::AdminUsergroupsApi, response_stream::Channel, usergroup_id::String, team_ids::String; auto_provision=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsAddTeams(_api, usergroup_id, team_ids; auto_provision=auto_provision, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminUsergroupsListChannels(_api::AdminUsergroupsApi, usergroup_id::String; team_id=nothing, include_num_members=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Dict{String, Any}, "/admin.usergroups.listChannels", ["slackAuth"])
    Swagger.set_param(_ctx.query, "usergroup_id", usergroup_id)  # type String
    Swagger.set_param(_ctx.query, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.query, "include_num_members", include_num_members)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

List the channels linked to an org-level IDP group (user group).
Param: usergroup_id::String (required)
Param: team_id::String
Param: include_num_members::Bool
Return: Dict{String, Any}
"""
function adminUsergroupsListChannels(_api::AdminUsergroupsApi, usergroup_id::String; team_id=nothing, include_num_members=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsListChannels(_api, usergroup_id; team_id=team_id, include_num_members=include_num_members, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsergroupsListChannels(_api::AdminUsergroupsApi, response_stream::Channel, usergroup_id::String; team_id=nothing, include_num_members=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsListChannels(_api, usergroup_id; team_id=team_id, include_num_members=include_num_members, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminUsergroupsRemoveChannels(_api::AdminUsergroupsApi, usergroup_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.usergroups.removeChannels", ["slackAuth"])
    Swagger.set_param(_ctx.form, "usergroup_id", usergroup_id)  # type String
    Swagger.set_param(_ctx.form, "channel_ids", channel_ids)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Remove one or more default channels from an org-level IDP group (user group).
Param: usergroup_id::String (required)
Param: channel_ids::String (required)
Return: Dict{String, Any}
"""
function adminUsergroupsRemoveChannels(_api::AdminUsergroupsApi, usergroup_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsRemoveChannels(_api, usergroup_id, channel_ids; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminUsergroupsRemoveChannels(_api::AdminUsergroupsApi, response_stream::Channel, usergroup_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminUsergroupsRemoveChannels(_api, usergroup_id, channel_ids; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export adminUsergroupsAddChannels, adminUsergroupsAddTeams, adminUsergroupsListChannels, adminUsergroupsRemoveChannels
