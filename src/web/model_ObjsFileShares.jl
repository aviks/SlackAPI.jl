# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsFileShares(;
        private=nothing,
        public=nothing,
    )

    - private::Any
    - public::Any
"""
mutable struct ObjsFileShares <: SwaggerModel
    private::Any # spec type: Union{ Nothing, Any } # spec name: private
    public::Any # spec type: Union{ Nothing, Any } # spec name: public

    function ObjsFileShares(;private=nothing, public=nothing)
        o = new()
        validate_property(ObjsFileShares, Symbol("private"), private)
        setfield!(o, Symbol("private"), private)
        validate_property(ObjsFileShares, Symbol("public"), public)
        setfield!(o, Symbol("public"), public)
        o
    end
end # type ObjsFileShares

const _property_map_ObjsFileShares = Dict{Symbol,Symbol}(Symbol("private")=>Symbol("private"), Symbol("public")=>Symbol("public"))
const _property_types_ObjsFileShares = Dict{Symbol,String}(Symbol("private")=>"Any", Symbol("public")=>"Any")
Base.propertynames(::Type{ ObjsFileShares }) = collect(keys(_property_map_ObjsFileShares))
Swagger.property_type(::Type{ ObjsFileShares }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsFileShares[name]))}
Swagger.field_name(::Type{ ObjsFileShares }, property_name::Symbol) =  _property_map_ObjsFileShares[property_name]

function check_required(o::ObjsFileShares)
    true
end

function validate_property(::Type{ ObjsFileShares }, name::Symbol, val)
end
