# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsPaging(;
        count=nothing,
        page=nothing,
        pages=nothing,
        per_page=nothing,
        spill=nothing,
        total=nothing,
    )

    - count::Int32
    - page::Int32
    - pages::Int32
    - per_page::Int32
    - spill::Int32
    - total::Int32
"""
mutable struct ObjsPaging <: SwaggerModel
    count::Any # spec type: Union{ Nothing, Int32 } # spec name: count
    page::Any # spec type: Union{ Nothing, Int32 } # spec name: page
    pages::Any # spec type: Union{ Nothing, Int32 } # spec name: pages
    per_page::Any # spec type: Union{ Nothing, Int32 } # spec name: per_page
    spill::Any # spec type: Union{ Nothing, Int32 } # spec name: spill
    total::Any # spec type: Union{ Nothing, Int32 } # spec name: total

    function ObjsPaging(;count=nothing, page=nothing, pages=nothing, per_page=nothing, spill=nothing, total=nothing)
        o = new()
        validate_property(ObjsPaging, Symbol("count"), count)
        setfield!(o, Symbol("count"), count)
        validate_property(ObjsPaging, Symbol("page"), page)
        setfield!(o, Symbol("page"), page)
        validate_property(ObjsPaging, Symbol("pages"), pages)
        setfield!(o, Symbol("pages"), pages)
        validate_property(ObjsPaging, Symbol("per_page"), per_page)
        setfield!(o, Symbol("per_page"), per_page)
        validate_property(ObjsPaging, Symbol("spill"), spill)
        setfield!(o, Symbol("spill"), spill)
        validate_property(ObjsPaging, Symbol("total"), total)
        setfield!(o, Symbol("total"), total)
        o
    end
end # type ObjsPaging

const _property_map_ObjsPaging = Dict{Symbol,Symbol}(Symbol("count")=>Symbol("count"), Symbol("page")=>Symbol("page"), Symbol("pages")=>Symbol("pages"), Symbol("per_page")=>Symbol("per_page"), Symbol("spill")=>Symbol("spill"), Symbol("total")=>Symbol("total"))
const _property_types_ObjsPaging = Dict{Symbol,String}(Symbol("count")=>"Int32", Symbol("page")=>"Int32", Symbol("pages")=>"Int32", Symbol("per_page")=>"Int32", Symbol("spill")=>"Int32", Symbol("total")=>"Int32")
Base.propertynames(::Type{ ObjsPaging }) = collect(keys(_property_map_ObjsPaging))
Swagger.property_type(::Type{ ObjsPaging }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsPaging[name]))}
Swagger.field_name(::Type{ ObjsPaging }, property_name::Symbol) =  _property_map_ObjsPaging[property_name]

function check_required(o::ObjsPaging)
    (getproperty(o, Symbol("page")) === nothing) && (return false)
    (getproperty(o, Symbol("total")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsPaging }, name::Symbol, val)
end
