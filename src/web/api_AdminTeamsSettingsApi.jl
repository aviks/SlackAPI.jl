# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct AdminTeamsSettingsApi <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_adminTeamsSettingsInfo(_api::AdminTeamsSettingsApi, team_id::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Dict{String, Any}, "/admin.teams.settings.info", ["slackAuth"])
    Swagger.set_param(_ctx.query, "team_id", team_id)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Fetch information about settings in a workspace
Param: team_id::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsInfo(_api::AdminTeamsSettingsApi, team_id::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsInfo(_api, team_id; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsInfo(_api::AdminTeamsSettingsApi, response_stream::Channel, team_id::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsInfo(_api, team_id; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminTeamsSettingsSetDefaultChannels(_api::AdminTeamsSettingsApi, team_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.teams.settings.setDefaultChannels", ["slackAuth"])
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "channel_ids", channel_ids)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded"] : [_mediaType])
    return _ctx
end

"""

Set the default channels of a workspace.
Param: team_id::String (required)
Param: channel_ids::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsSetDefaultChannels(_api::AdminTeamsSettingsApi, team_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDefaultChannels(_api, team_id, channel_ids; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsSetDefaultChannels(_api::AdminTeamsSettingsApi, response_stream::Channel, team_id::String, channel_ids::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDefaultChannels(_api, team_id, channel_ids; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminTeamsSettingsSetDescription(_api::AdminTeamsSettingsApi, team_id::String, description::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.teams.settings.setDescription", ["slackAuth"])
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "description", description)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Set the description of a given workspace.
Param: team_id::String (required)
Param: description::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsSetDescription(_api::AdminTeamsSettingsApi, team_id::String, description::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDescription(_api, team_id, description; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsSetDescription(_api::AdminTeamsSettingsApi, response_stream::Channel, team_id::String, description::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDescription(_api, team_id, description; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminTeamsSettingsSetDiscoverability(_api::AdminTeamsSettingsApi, team_id::String, discoverability::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.teams.settings.setDiscoverability", ["slackAuth"])
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "discoverability", discoverability)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

An API method that allows admins to set the discoverability of a given workspace
Param: team_id::String (required)
Param: discoverability::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsSetDiscoverability(_api::AdminTeamsSettingsApi, team_id::String, discoverability::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDiscoverability(_api, team_id, discoverability; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsSetDiscoverability(_api::AdminTeamsSettingsApi, response_stream::Channel, team_id::String, discoverability::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetDiscoverability(_api, team_id, discoverability; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminTeamsSettingsSetIcon(_api::AdminTeamsSettingsApi, image_url::String, team_id::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.teams.settings.setIcon", ["slackAuth"])
    Swagger.set_param(_ctx.form, "image_url", image_url)  # type String
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded"] : [_mediaType])
    return _ctx
end

"""

Sets the icon of a workspace.
Param: image_url::String (required)
Param: team_id::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsSetIcon(_api::AdminTeamsSettingsApi, image_url::String, team_id::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetIcon(_api, image_url, team_id; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsSetIcon(_api::AdminTeamsSettingsApi, response_stream::Channel, image_url::String, team_id::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetIcon(_api, image_url, team_id; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_adminTeamsSettingsSetName(_api::AdminTeamsSettingsApi, team_id::String, name::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/admin.teams.settings.setName", ["slackAuth"])
    Swagger.set_param(_ctx.form, "team_id", team_id)  # type String
    Swagger.set_param(_ctx.form, "name", name)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Set the name of a given workspace.
Param: team_id::String (required)
Param: name::String (required)
Return: Dict{String, Any}
"""
function adminTeamsSettingsSetName(_api::AdminTeamsSettingsApi, team_id::String, name::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetName(_api, team_id, name; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function adminTeamsSettingsSetName(_api::AdminTeamsSettingsApi, response_stream::Channel, team_id::String, name::String; _mediaType=nothing)
    _ctx = _swaggerinternal_adminTeamsSettingsSetName(_api, team_id, name; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export adminTeamsSettingsInfo, adminTeamsSettingsSetDefaultChannels, adminTeamsSettingsSetDescription, adminTeamsSettingsSetDiscoverability, adminTeamsSettingsSetIcon, adminTeamsSettingsSetName
