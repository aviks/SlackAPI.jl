# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct ReactionsApi <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_reactionsAdd(_api::ReactionsApi, channel::String, name::String, timestamp::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/reactions.add", ["slackAuth"])
    Swagger.set_param(_ctx.form, "channel", channel)  # type String
    Swagger.set_param(_ctx.form, "name", name)  # type String
    Swagger.set_param(_ctx.form, "timestamp", timestamp)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Adds a reaction to an item.
Param: channel::String (required)
Param: name::String (required)
Param: timestamp::String (required)
Return: Dict{String, Any}
"""
function reactionsAdd(_api::ReactionsApi, channel::String, name::String, timestamp::String; _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsAdd(_api, channel, name, timestamp; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function reactionsAdd(_api::ReactionsApi, response_stream::Channel, channel::String, name::String, timestamp::String; _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsAdd(_api, channel, name, timestamp; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_reactionsGet(_api::ReactionsApi; channel=nothing, file=nothing, file_comment=nothing, full=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Any, "/reactions.get", ["slackAuth"])
    Swagger.set_param(_ctx.query, "channel", channel)  # type String
    Swagger.set_param(_ctx.query, "file", file)  # type String
    Swagger.set_param(_ctx.query, "file_comment", file_comment)  # type String
    Swagger.set_param(_ctx.query, "full", full)  # type Bool
    Swagger.set_param(_ctx.query, "timestamp", timestamp)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded"] : [_mediaType])
    return _ctx
end

"""

Gets reactions for an item.
Param: channel::String
Param: file::String
Param: file_comment::String
Param: full::Bool
Param: timestamp::String
Return: Any
"""
function reactionsGet(_api::ReactionsApi; channel=nothing, file=nothing, file_comment=nothing, full=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsGet(_api; channel=channel, file=file, file_comment=file_comment, full=full, timestamp=timestamp, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function reactionsGet(_api::ReactionsApi, response_stream::Channel; channel=nothing, file=nothing, file_comment=nothing, full=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsGet(_api; channel=channel, file=file, file_comment=file_comment, full=full, timestamp=timestamp, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_reactionsList(_api::ReactionsApi; user=nothing, full=nothing, count=nothing, page=nothing, cursor=nothing, limit=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Dict{String, Any}, "/reactions.list", ["slackAuth"])
    Swagger.set_param(_ctx.query, "user", user)  # type String
    Swagger.set_param(_ctx.query, "full", full)  # type Bool
    Swagger.set_param(_ctx.query, "count", count)  # type Int32
    Swagger.set_param(_ctx.query, "page", page)  # type Int32
    Swagger.set_param(_ctx.query, "cursor", cursor)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded"] : [_mediaType])
    return _ctx
end

"""

Lists reactions made by a user.
Param: user::String
Param: full::Bool
Param: count::Int32
Param: page::Int32
Param: cursor::String
Param: limit::Int32
Return: Dict{String, Any}
"""
function reactionsList(_api::ReactionsApi; user=nothing, full=nothing, count=nothing, page=nothing, cursor=nothing, limit=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsList(_api; user=user, full=full, count=count, page=page, cursor=cursor, limit=limit, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function reactionsList(_api::ReactionsApi, response_stream::Channel; user=nothing, full=nothing, count=nothing, page=nothing, cursor=nothing, limit=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsList(_api; user=user, full=full, count=count, page=page, cursor=cursor, limit=limit, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_reactionsRemove(_api::ReactionsApi, name::String; file=nothing, file_comment=nothing, channel=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Dict{String, Any}, "/reactions.remove", ["slackAuth"])
    Swagger.set_param(_ctx.form, "name", name)  # type String
    Swagger.set_param(_ctx.form, "file", file)  # type String
    Swagger.set_param(_ctx.form, "file_comment", file_comment)  # type String
    Swagger.set_param(_ctx.form, "channel", channel)  # type String
    Swagger.set_param(_ctx.form, "timestamp", timestamp)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", "application/json"] : [_mediaType])
    return _ctx
end

"""

Removes a reaction from an item.
Param: name::String (required)
Param: file::String
Param: file_comment::String
Param: channel::String
Param: timestamp::String
Return: Dict{String, Any}
"""
function reactionsRemove(_api::ReactionsApi, name::String; file=nothing, file_comment=nothing, channel=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsRemove(_api, name; file=file, file_comment=file_comment, channel=channel, timestamp=timestamp, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function reactionsRemove(_api::ReactionsApi, response_stream::Channel, name::String; file=nothing, file_comment=nothing, channel=nothing, timestamp=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_reactionsRemove(_api, name; file=file, file_comment=file_comment, channel=channel, timestamp=timestamp, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export reactionsAdd, reactionsGet, reactionsList, reactionsRemove
