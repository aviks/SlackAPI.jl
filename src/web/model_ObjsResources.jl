# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsResources(;
        excluded_ids=nothing,
        ids=nothing,
        wildcard=nothing,
    )

    - excluded_ids::Vector{Any}
    - ids::Vector{Any}
    - wildcard::Bool
"""
mutable struct ObjsResources <: SwaggerModel
    excluded_ids::Any # spec type: Union{ Nothing, Vector{Any} } # spec name: excluded_ids
    ids::Any # spec type: Union{ Nothing, Vector{Any} } # spec name: ids
    wildcard::Any # spec type: Union{ Nothing, Bool } # spec name: wildcard

    function ObjsResources(;excluded_ids=nothing, ids=nothing, wildcard=nothing)
        o = new()
        validate_property(ObjsResources, Symbol("excluded_ids"), excluded_ids)
        setfield!(o, Symbol("excluded_ids"), excluded_ids)
        validate_property(ObjsResources, Symbol("ids"), ids)
        setfield!(o, Symbol("ids"), ids)
        validate_property(ObjsResources, Symbol("wildcard"), wildcard)
        setfield!(o, Symbol("wildcard"), wildcard)
        o
    end
end # type ObjsResources

const _property_map_ObjsResources = Dict{Symbol,Symbol}(Symbol("excluded_ids")=>Symbol("excluded_ids"), Symbol("ids")=>Symbol("ids"), Symbol("wildcard")=>Symbol("wildcard"))
const _property_types_ObjsResources = Dict{Symbol,String}(Symbol("excluded_ids")=>"Vector{Any}", Symbol("ids")=>"Vector{Any}", Symbol("wildcard")=>"Bool")
Base.propertynames(::Type{ ObjsResources }) = collect(keys(_property_map_ObjsResources))
Swagger.property_type(::Type{ ObjsResources }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsResources[name]))}
Swagger.field_name(::Type{ ObjsResources }, property_name::Symbol) =  _property_map_ObjsResources[property_name]

function check_required(o::ObjsResources)
    (getproperty(o, Symbol("ids")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsResources }, name::Symbol, val)
end
