# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""
    ObjsMessage(;
        attachments=nothing,
        blocks=nothing,
        bot_id=nothing,
        bot_profile=nothing,
        client_msg_id=nothing,
        comment=nothing,
        display_as_bot=nothing,
        file=nothing,
        files=nothing,
        icons=nothing,
        inviter=nothing,
        is_delayed_message=nothing,
        is_intro=nothing,
        is_starred=nothing,
        last_read=nothing,
        latest_reply=nothing,
        name=nothing,
        old_name=nothing,
        parent_user_id=nothing,
        permalink=nothing,
        pinned_to=nothing,
        purpose=nothing,
        reactions=nothing,
        reply_count=nothing,
        reply_users=nothing,
        reply_users_count=nothing,
        source_team=nothing,
        subscribed=nothing,
        subtype=nothing,
        team=nothing,
        text=nothing,
        thread_ts=nothing,
        topic=nothing,
        ts=nothing,
        type=nothing,
        unread_count=nothing,
        upload=nothing,
        user=nothing,
        user_profile=nothing,
        user_team=nothing,
        username=nothing,
    )

    - attachments::Vector{ObjsMessageAttachments}
    - blocks::Blocks
    - bot_id::Any
    - bot_profile::ObjsBotProfile
    - client_msg_id::String
    - comment::ObjsComment
    - display_as_bot::Bool
    - file::ObjsFile
    - files::Vector{ObjsFile}
    - icons::ObjsMessageIcons
    - inviter::DefsUserId
    - is_delayed_message::Bool
    - is_intro::Bool
    - is_starred::Bool
    - last_read::DefsTs
    - latest_reply::DefsTs
    - name::String
    - old_name::String
    - parent_user_id::DefsUserId
    - permalink::String
    - pinned_to::Vector{DefsChannel}
    - purpose::String
    - reactions::Vector{ObjsReaction}
    - reply_count::Int32
    - reply_users::Vector{DefsUserId}
    - reply_users_count::Int32
    - source_team::DefsWorkspaceId
    - subscribed::Bool
    - subtype::String
    - team::DefsWorkspaceId
    - text::String
    - thread_ts::DefsTs
    - topic::String
    - ts::DefsTs
    - type::String
    - unread_count::Int32
    - upload::Bool
    - user::DefsUserId
    - user_profile::ObjsUserProfileShort
    - user_team::DefsWorkspaceId
    - username::String
"""
mutable struct ObjsMessage <: SwaggerModel
    attachments::Any # spec type: Union{ Nothing, Vector{ObjsMessageAttachments} } # spec name: attachments
    blocks::Any # spec type: Union{ Nothing, Blocks } # spec name: blocks
    bot_id::Any # spec type: Union{ Nothing, Any } # spec name: bot_id
    bot_profile::Any # spec type: Union{ Nothing, ObjsBotProfile } # spec name: bot_profile
    client_msg_id::Any # spec type: Union{ Nothing, String } # spec name: client_msg_id
    comment::Any # spec type: Union{ Nothing, ObjsComment } # spec name: comment
    display_as_bot::Any # spec type: Union{ Nothing, Bool } # spec name: display_as_bot
    file::Any # spec type: Union{ Nothing, ObjsFile } # spec name: file
    files::Any # spec type: Union{ Nothing, Vector{ObjsFile} } # spec name: files
    icons::Any # spec type: Union{ Nothing, ObjsMessageIcons } # spec name: icons
    inviter::Any # spec type: Union{ Nothing, DefsUserId } # spec name: inviter
    is_delayed_message::Any # spec type: Union{ Nothing, Bool } # spec name: is_delayed_message
    is_intro::Any # spec type: Union{ Nothing, Bool } # spec name: is_intro
    is_starred::Any # spec type: Union{ Nothing, Bool } # spec name: is_starred
    last_read::Any # spec type: Union{ Nothing, DefsTs } # spec name: last_read
    latest_reply::Any # spec type: Union{ Nothing, DefsTs } # spec name: latest_reply
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    old_name::Any # spec type: Union{ Nothing, String } # spec name: old_name
    parent_user_id::Any # spec type: Union{ Nothing, DefsUserId } # spec name: parent_user_id
    permalink::Any # spec type: Union{ Nothing, String } # spec name: permalink
    pinned_to::Any # spec type: Union{ Nothing, Vector{DefsChannel} } # spec name: pinned_to
    purpose::Any # spec type: Union{ Nothing, String } # spec name: purpose
    reactions::Any # spec type: Union{ Nothing, Vector{ObjsReaction} } # spec name: reactions
    reply_count::Any # spec type: Union{ Nothing, Int32 } # spec name: reply_count
    reply_users::Any # spec type: Union{ Nothing, Vector{DefsUserId} } # spec name: reply_users
    reply_users_count::Any # spec type: Union{ Nothing, Int32 } # spec name: reply_users_count
    source_team::Any # spec type: Union{ Nothing, DefsWorkspaceId } # spec name: source_team
    subscribed::Any # spec type: Union{ Nothing, Bool } # spec name: subscribed
    subtype::Any # spec type: Union{ Nothing, String } # spec name: subtype
    team::Any # spec type: Union{ Nothing, DefsWorkspaceId } # spec name: team
    text::Any # spec type: Union{ Nothing, String } # spec name: text
    thread_ts::Any # spec type: Union{ Nothing, DefsTs } # spec name: thread_ts
    topic::Any # spec type: Union{ Nothing, String } # spec name: topic
    ts::Any # spec type: Union{ Nothing, DefsTs } # spec name: ts
    type::Any # spec type: Union{ Nothing, String } # spec name: type
    unread_count::Any # spec type: Union{ Nothing, Int32 } # spec name: unread_count
    upload::Any # spec type: Union{ Nothing, Bool } # spec name: upload
    user::Any # spec type: Union{ Nothing, DefsUserId } # spec name: user
    user_profile::Any # spec type: Union{ Nothing, ObjsUserProfileShort } # spec name: user_profile
    user_team::Any # spec type: Union{ Nothing, DefsWorkspaceId } # spec name: user_team
    username::Any # spec type: Union{ Nothing, String } # spec name: username

    function ObjsMessage(;attachments=nothing, blocks=nothing, bot_id=nothing, bot_profile=nothing, client_msg_id=nothing, comment=nothing, display_as_bot=nothing, file=nothing, files=nothing, icons=nothing, inviter=nothing, is_delayed_message=nothing, is_intro=nothing, is_starred=nothing, last_read=nothing, latest_reply=nothing, name=nothing, old_name=nothing, parent_user_id=nothing, permalink=nothing, pinned_to=nothing, purpose=nothing, reactions=nothing, reply_count=nothing, reply_users=nothing, reply_users_count=nothing, source_team=nothing, subscribed=nothing, subtype=nothing, team=nothing, text=nothing, thread_ts=nothing, topic=nothing, ts=nothing, type=nothing, unread_count=nothing, upload=nothing, user=nothing, user_profile=nothing, user_team=nothing, username=nothing)
        o = new()
        validate_property(ObjsMessage, Symbol("attachments"), attachments)
        setfield!(o, Symbol("attachments"), attachments)
        validate_property(ObjsMessage, Symbol("blocks"), blocks)
        setfield!(o, Symbol("blocks"), blocks)
        validate_property(ObjsMessage, Symbol("bot_id"), bot_id)
        setfield!(o, Symbol("bot_id"), bot_id)
        validate_property(ObjsMessage, Symbol("bot_profile"), bot_profile)
        setfield!(o, Symbol("bot_profile"), bot_profile)
        validate_property(ObjsMessage, Symbol("client_msg_id"), client_msg_id)
        setfield!(o, Symbol("client_msg_id"), client_msg_id)
        validate_property(ObjsMessage, Symbol("comment"), comment)
        setfield!(o, Symbol("comment"), comment)
        validate_property(ObjsMessage, Symbol("display_as_bot"), display_as_bot)
        setfield!(o, Symbol("display_as_bot"), display_as_bot)
        validate_property(ObjsMessage, Symbol("file"), file)
        setfield!(o, Symbol("file"), file)
        validate_property(ObjsMessage, Symbol("files"), files)
        setfield!(o, Symbol("files"), files)
        validate_property(ObjsMessage, Symbol("icons"), icons)
        setfield!(o, Symbol("icons"), icons)
        validate_property(ObjsMessage, Symbol("inviter"), inviter)
        setfield!(o, Symbol("inviter"), inviter)
        validate_property(ObjsMessage, Symbol("is_delayed_message"), is_delayed_message)
        setfield!(o, Symbol("is_delayed_message"), is_delayed_message)
        validate_property(ObjsMessage, Symbol("is_intro"), is_intro)
        setfield!(o, Symbol("is_intro"), is_intro)
        validate_property(ObjsMessage, Symbol("is_starred"), is_starred)
        setfield!(o, Symbol("is_starred"), is_starred)
        validate_property(ObjsMessage, Symbol("last_read"), last_read)
        setfield!(o, Symbol("last_read"), last_read)
        validate_property(ObjsMessage, Symbol("latest_reply"), latest_reply)
        setfield!(o, Symbol("latest_reply"), latest_reply)
        validate_property(ObjsMessage, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(ObjsMessage, Symbol("old_name"), old_name)
        setfield!(o, Symbol("old_name"), old_name)
        validate_property(ObjsMessage, Symbol("parent_user_id"), parent_user_id)
        setfield!(o, Symbol("parent_user_id"), parent_user_id)
        validate_property(ObjsMessage, Symbol("permalink"), permalink)
        setfield!(o, Symbol("permalink"), permalink)
        validate_property(ObjsMessage, Symbol("pinned_to"), pinned_to)
        setfield!(o, Symbol("pinned_to"), pinned_to)
        validate_property(ObjsMessage, Symbol("purpose"), purpose)
        setfield!(o, Symbol("purpose"), purpose)
        validate_property(ObjsMessage, Symbol("reactions"), reactions)
        setfield!(o, Symbol("reactions"), reactions)
        validate_property(ObjsMessage, Symbol("reply_count"), reply_count)
        setfield!(o, Symbol("reply_count"), reply_count)
        validate_property(ObjsMessage, Symbol("reply_users"), reply_users)
        setfield!(o, Symbol("reply_users"), reply_users)
        validate_property(ObjsMessage, Symbol("reply_users_count"), reply_users_count)
        setfield!(o, Symbol("reply_users_count"), reply_users_count)
        validate_property(ObjsMessage, Symbol("source_team"), source_team)
        setfield!(o, Symbol("source_team"), source_team)
        validate_property(ObjsMessage, Symbol("subscribed"), subscribed)
        setfield!(o, Symbol("subscribed"), subscribed)
        validate_property(ObjsMessage, Symbol("subtype"), subtype)
        setfield!(o, Symbol("subtype"), subtype)
        validate_property(ObjsMessage, Symbol("team"), team)
        setfield!(o, Symbol("team"), team)
        validate_property(ObjsMessage, Symbol("text"), text)
        setfield!(o, Symbol("text"), text)
        validate_property(ObjsMessage, Symbol("thread_ts"), thread_ts)
        setfield!(o, Symbol("thread_ts"), thread_ts)
        validate_property(ObjsMessage, Symbol("topic"), topic)
        setfield!(o, Symbol("topic"), topic)
        validate_property(ObjsMessage, Symbol("ts"), ts)
        setfield!(o, Symbol("ts"), ts)
        validate_property(ObjsMessage, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        validate_property(ObjsMessage, Symbol("unread_count"), unread_count)
        setfield!(o, Symbol("unread_count"), unread_count)
        validate_property(ObjsMessage, Symbol("upload"), upload)
        setfield!(o, Symbol("upload"), upload)
        validate_property(ObjsMessage, Symbol("user"), user)
        setfield!(o, Symbol("user"), user)
        validate_property(ObjsMessage, Symbol("user_profile"), user_profile)
        setfield!(o, Symbol("user_profile"), user_profile)
        validate_property(ObjsMessage, Symbol("user_team"), user_team)
        setfield!(o, Symbol("user_team"), user_team)
        validate_property(ObjsMessage, Symbol("username"), username)
        setfield!(o, Symbol("username"), username)
        o
    end
end # type ObjsMessage

const _property_map_ObjsMessage = Dict{Symbol,Symbol}(Symbol("attachments")=>Symbol("attachments"), Symbol("blocks")=>Symbol("blocks"), Symbol("bot_id")=>Symbol("bot_id"), Symbol("bot_profile")=>Symbol("bot_profile"), Symbol("client_msg_id")=>Symbol("client_msg_id"), Symbol("comment")=>Symbol("comment"), Symbol("display_as_bot")=>Symbol("display_as_bot"), Symbol("file")=>Symbol("file"), Symbol("files")=>Symbol("files"), Symbol("icons")=>Symbol("icons"), Symbol("inviter")=>Symbol("inviter"), Symbol("is_delayed_message")=>Symbol("is_delayed_message"), Symbol("is_intro")=>Symbol("is_intro"), Symbol("is_starred")=>Symbol("is_starred"), Symbol("last_read")=>Symbol("last_read"), Symbol("latest_reply")=>Symbol("latest_reply"), Symbol("name")=>Symbol("name"), Symbol("old_name")=>Symbol("old_name"), Symbol("parent_user_id")=>Symbol("parent_user_id"), Symbol("permalink")=>Symbol("permalink"), Symbol("pinned_to")=>Symbol("pinned_to"), Symbol("purpose")=>Symbol("purpose"), Symbol("reactions")=>Symbol("reactions"), Symbol("reply_count")=>Symbol("reply_count"), Symbol("reply_users")=>Symbol("reply_users"), Symbol("reply_users_count")=>Symbol("reply_users_count"), Symbol("source_team")=>Symbol("source_team"), Symbol("subscribed")=>Symbol("subscribed"), Symbol("subtype")=>Symbol("subtype"), Symbol("team")=>Symbol("team"), Symbol("text")=>Symbol("text"), Symbol("thread_ts")=>Symbol("thread_ts"), Symbol("topic")=>Symbol("topic"), Symbol("ts")=>Symbol("ts"), Symbol("type")=>Symbol("type"), Symbol("unread_count")=>Symbol("unread_count"), Symbol("upload")=>Symbol("upload"), Symbol("user")=>Symbol("user"), Symbol("user_profile")=>Symbol("user_profile"), Symbol("user_team")=>Symbol("user_team"), Symbol("username")=>Symbol("username"))
const _property_types_ObjsMessage = Dict{Symbol,String}(Symbol("attachments")=>"Vector{ObjsMessageAttachments}", Symbol("blocks")=>"Blocks", Symbol("bot_id")=>"Any", Symbol("bot_profile")=>"ObjsBotProfile", Symbol("client_msg_id")=>"String", Symbol("comment")=>"ObjsComment", Symbol("display_as_bot")=>"Bool", Symbol("file")=>"ObjsFile", Symbol("files")=>"Vector{ObjsFile}", Symbol("icons")=>"ObjsMessageIcons", Symbol("inviter")=>"DefsUserId", Symbol("is_delayed_message")=>"Bool", Symbol("is_intro")=>"Bool", Symbol("is_starred")=>"Bool", Symbol("last_read")=>"DefsTs", Symbol("latest_reply")=>"DefsTs", Symbol("name")=>"String", Symbol("old_name")=>"String", Symbol("parent_user_id")=>"DefsUserId", Symbol("permalink")=>"String", Symbol("pinned_to")=>"Vector{DefsChannel}", Symbol("purpose")=>"String", Symbol("reactions")=>"Vector{ObjsReaction}", Symbol("reply_count")=>"Int32", Symbol("reply_users")=>"Vector{DefsUserId}", Symbol("reply_users_count")=>"Int32", Symbol("source_team")=>"DefsWorkspaceId", Symbol("subscribed")=>"Bool", Symbol("subtype")=>"String", Symbol("team")=>"DefsWorkspaceId", Symbol("text")=>"String", Symbol("thread_ts")=>"DefsTs", Symbol("topic")=>"String", Symbol("ts")=>"DefsTs", Symbol("type")=>"String", Symbol("unread_count")=>"Int32", Symbol("upload")=>"Bool", Symbol("user")=>"DefsUserId", Symbol("user_profile")=>"ObjsUserProfileShort", Symbol("user_team")=>"DefsWorkspaceId", Symbol("username")=>"String")
Base.propertynames(::Type{ ObjsMessage }) = collect(keys(_property_map_ObjsMessage))
Swagger.property_type(::Type{ ObjsMessage }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjsMessage[name]))}
Swagger.field_name(::Type{ ObjsMessage }, property_name::Symbol) =  _property_map_ObjsMessage[property_name]

function check_required(o::ObjsMessage)
    (getproperty(o, Symbol("text")) === nothing) && (return false)
    (getproperty(o, Symbol("ts")) === nothing) && (return false)
    (getproperty(o, Symbol("type")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjsMessage }, name::Symbol, val)
end
